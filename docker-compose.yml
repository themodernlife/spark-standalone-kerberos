version: "2"
services:
  kerberos:
    container_name: kerberos.example
    hostname: kerberos.example.com
    entrypoint: /start-kdc.sh
    build:
      context: .
      args:
        - http_proxy
        - https_proxy
    volumes:
      - server-keytab:/var/keytabs

  nn:
    container_name: nn.example
    hostname: nn.example.com
    user: hdfs
    entrypoint: /start-namenode.sh
    build:
      context: .
      args:
        - http_proxy
        - https_proxy
    volumes:
      - server-keytab:/var/keytabs
      - /hadoop

  dn1:
    container_name: dn1.example
    hostname: dn1.example.com
    user: hdfs
    entrypoint: /start-datanode.sh
    build:
      context: .
      args:
        - http_proxy
        - https_proxy
    volumes:
      - server-keytab:/var/keytabs

  driver:
    container_name: driver.example
    hostname: driver.example.com
    user: spark
    entrypoint: sleep 10000
    build:
      context: .
      args:
        - http_proxy
        - https_proxy
    ports:
      - 5005/tcp
    volumes:
      - server-keytab:/var/keytabs
      - ${SPARK_DEV_HOME}/core/target/spark-core_2.11-${SPARK_DEV_VERSION}.jar:/spark/jars/spark-core_2.11-${SPARK_DEV_VERSION}.jar
      - ${SPARK_DEV_HOME}/resource-managers/yarn/target/spark-yarn_2.11-${SPARK_DEV_VERSION}.jar:/spark/jars/spark-yarn_2.11-${SPARK_DEV_VERSION}.jar

  sm:
    container_name: sm.example
    hostname: sm.example.com
    user: spark
    entrypoint: /spark/sbin/start-master.sh
    build:
      context: .
      args:
        - http_proxy
        - https_proxy
    ports:
      - 8080/tcp
      - 5005/tcp
    volumes:
      - server-keytab:/var/keytabs
      - ${SPARK_DEV_HOME}/core/target/spark-core_2.11-${SPARK_DEV_VERSION}.jar:/spark/jars/spark-core_2.11-${SPARK_DEV_VERSION}.jar
      - ${SPARK_DEV_HOME}/resource-managers/yarn/target/spark-yarn_2.11-${SPARK_DEV_VERSION}.jar:/spark/jars/spark-yarn_2.11-${SPARK_DEV_VERSION}.jar
      - ${SPARK_DEV_HOME}/sql/hive/target/spark-hive_2.11-${SPARK_DEV_VERSION}.jar:/spark/jars/spark-hive_2.11-${SPARK_DEV_VERSION}.jar

  se1:
    container_name: se1.example
    hostname: se1.example.com
    user: spark
    entrypoint: /spark/sbin/start-slave.sh spark://sm.example.com:7077
    build:
      context: .
      args:
        - http_proxy
        - https_proxy
    ports:
      - 5005/tcp
    volumes:
      - server-keytab:/var/keytabs
      - ${SPARK_DEV_HOME}/core/target/spark-core_2.11-${SPARK_DEV_VERSION}.jar:/spark/jars/spark-core_2.11-${SPARK_DEV_VERSION}.jar
      - ${SPARK_DEV_HOME}/resource-managers/yarn/target/spark-yarn_2.11-${SPARK_DEV_VERSION}.jar:/spark/jars/spark-yarn_2.11-${SPARK_DEV_VERSION}.jar
      - ${SPARK_DEV_HOME}/sql/hive/target/spark-hive_2.11-${SPARK_DEV_VERSION}.jar:/spark/jars/spark-hive_2.11-${SPARK_DEV_VERSION}.jar

  se2:
    container_name: se2.example
    hostname: se2.example.com
    user: spark
    entrypoint: /spark/sbin/start-slave.sh spark://sm.example.com:7077
    build:
      context: .
      args:
        - http_proxy
        - https_proxy
    ports:
      - 5005/tcp
    volumes:
      - server-keytab:/var/keytabs
      - ${SPARK_DEV_HOME}/core/target/spark-core_2.11-${SPARK_DEV_VERSION}.jar:/spark/jars/spark-core_2.11-${SPARK_DEV_VERSION}.jar
      - ${SPARK_DEV_HOME}/resource-managers/yarn/target/spark-yarn_2.11-${SPARK_DEV_VERSION}.jar:/spark/jars/spark-yarn_2.11-${SPARK_DEV_VERSION}.jar
      - ${SPARK_DEV_HOME}/sql/hive/target/spark-hive_2.11-${SPARK_DEV_VERSION}.jar:/spark/jars/spark-hive_2.11-${SPARK_DEV_VERSION}.jar

  data-populator:
    container_name: data-populator.example
    hostname: data-populator.example.com
    user: hdfs
    entrypoint: /populate-data.sh
    build:
      context: .
      args:
        - http_proxy
        - https_proxy
    volumes:
      - server-keytab:/var/keytabs


  # dn2.example.com:
  #   hostname: dn2.example.com
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.dn
  #   ports:
  #     - 88/tcp
  #     - 88/udp
  #   volumes:
  #     - server-keytab:/var/keytabs   

  # client.example.com:
  #   hostname: client.example.com
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.client
  #   entrypoint: sleep 10000

networks:
  default:
    external:
      name: com

volumes:
  server-keytab:
